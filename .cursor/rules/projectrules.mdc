---
description: projectrules
globs: 
alwaysApply: false
---
---
description: projectrules
globs: 
alwaysApply: false
---
{
  "tabSize": 2,
  "insertSpaces": true,
  "cursorStyle": "line",
  "lineNumbers": "on",
  "formatOnSave": true,
  "codeStyle": {
    "react": {
      "componentDefinition": "arrow-function",
      "componentExport": "default",
      "jsxQuotes": "double",
      "stateHooks": "const [state, setState]",
      "refHooks": "const ref = useRef()"
    },
    "imports": {
      "order": [
        "react",
        "react-*",
        "@radix-ui/*",
        "@tanstack/*",
        "other-libraries",
        "@/components/ui/*",
        "@/components/*",
        "@/lib/*",
        "@/hooks/*",
        "../*",
        "./*"
      ],
      "grouping": true,
      "addSpaceBetweenGroups": true
    },
    "typescript": {
      "interfaceOverType": false,
      "exportPropsInterface": true,
      "strictNullChecks": true
    }
  },
  "styleRules": {
    "tailwind": {
      "customPrefix": "",
      "preferredColorFormat": "homywork-color",
      "spacing": {
        "container": "container-width",
        "section": "section-padding"
      },
      "customClasses": [
        "gradient-text",
        "container-width",
        "section-padding"
      ],
      "responsiveOrder": ["base", "sm", "md", "lg", "xl"],
      "animationClasses": ["animate-fade-up", "animate-fade-in"]
    },
    "componentPatterns": {
      "button": "use Button from ui/button with appropriate variants",
      "layout": "prefer flex and grid over absolute positioning",
      "section": "use section tag with section-padding class"
    },
    "colorSystem": {
      "primary": "homywork-purple",
      "secondary": "homywork-orange",
      "dark": "homywork-darkPurple",
      "light": "homywork-lightPurple",
      "text": "homywork-gray"
    }
  },
  "componentRules": {
    "structure": {
      "sectionPattern": "export const ComponentName = () => { return <section className=\"section-padding\"><div className=\"container-width\">Content</div></section>; };",
      "pageLayout": "main content wrapped in <main>, with <Navbar /> at top and <Footer /> at bottom",
      "componentWrapping": "prefer composition over complex components"
    },
    "ui": {
      "preferShadcnComponents": true,
      "extendWithTailwind": true,
      "buttonVariants": ["default", "outline", "destructive", "secondary", "ghost", "link"],
      "buttonSizes": ["default", "sm", "lg", "icon"]
    }
  },
  "fileNaming": {
    "components": "PascalCase.tsx",
    "hooks": "camelCase.ts",
    "utils": "camelCase.ts",
    "pages": "PascalCase.tsx"
  },
  "projectFeatures": {
    "formHandling": "react-hook-form with zod validation",
    "dataFetching": "tanstack-query",
    "routing": "react-router-dom v6",
    "animations": "tailwindcss-animate and custom keyframes",
    "icons": "lucide-react"
  },
  "ai_assistance_rules": {
    "codeGeneration": {
      "matchExistingPatterns": true,
      "useExistingComponents": true,
      "responsiveDesign": true,
      "accessibilityFocus": true
    },
    "styleGeneration": {
      "useTailwindClasses": true,
      "avoidInlineStyles": true,
      "followColorSystem": true,
      "useCustomClasses": true,
      "animations": "use project's animation classes"
    },
    "componentCreation": {
      "followSectionPattern": true,
      "useUIComponentsFromLibrary": true,
      "maintainNamingConventions": true
    }
  }
}